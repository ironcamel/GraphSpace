<script type="text/javascript" src="[% request.uri_base %]/js/cytoscape_web/json2.min.js"></script>
<script type="text/javascript" src="[% request.uri_base %]/js/cytoscape_web/AC_OETags.min.js"></script>
<script type="text/javascript" src="[% request.uri_base %]/js/cytoscape_web/cytoscapeweb.min.js"></script>

<script type="text/javascript">

function get_graph(graph_id) {
    var xml = $.ajax({
        url: "[% request.uri_base %]/graphml/" + graph_id,
        async: false
    }).responseText;
    return xml;
}

function get_ppi(go_id) {
    return $.ajax({
        url: "[% request.uri_base %]/ppi/" + go_id,
        dataType: 'text',
        error: function(xhr, text, err) { 
            alert('ajax error: ' + text);
        },
    }).responseText;
}

var div_id = "cytoscapeweb";

//http://jquery-howto.blogspot.com/2009/07/identifying-locating-mouse-position-in.html
//var xx = 0;
//var yy = 0;
//$().mousemove(function(e){
//   xx = e.pageX - $('#' + div_id)[0].offsetLeft;
//   yy = e.pageY - $('#' + div_id)[0].offsetTop;
//});

function gen_node_details(data) {
    var body = data.popup;
    var graph_id = data.go_function_id;
    if (graph_id) {
        body = '<b>Related Graphs</b><br/>'
            + '<a href="[% request.uri_base %]/ppi/' + graph_id
            + '" target="_blank">'
            + graph_id + '</a><hr/>' + body;
    }
    return body;
}

function qtip_data(evt) {
    var data = evt.target.data;
    var body = gen_node_details(data);
    body = '<div style="width:200px; height:150; overflow:auto">'
        + body + '</div>';
    return {
        content: {
            text: body,
            title: {
                text: data.label,
                button: 'X'
            }
        },
        position: {
            corner: {
                target: "topLeft",
                tooltip: "bottomMiddle"
            },
            adjust: {
                x: evt.mouseX,
                y: evt.mouseY
            }
        },
        show: {
            delay: 0,
            when: false,
            effect: { type: "fade", length: 0 },
            ready: true // Show the tooltip when ready
        },
        hide: {
            delay: 0,
            effect: { type: "fade", length: 1000 },
            when: { event: "unfocus" },
            fixed: true
        },
        style: {
           border: { width: 1, radius: 6 },
           textAlign: 'left',
           //tip: true,
           name: 'light'
        } 
    };
}

var options = {
    swfPath: "[% request.uri_base %]/swf/CytoscapeWeb",
    flashInstallerPath: "[% request.uri_base %]/swf/playerProductInstall"
};

var vis = new org.cytoscapeweb.Visualization(div_id, options);

vis.ready(function() {
    vis.addContextMenuItem("Select neighbors", "nodes", function (evt) { 
        var rootNode = evt.target;
        var fNeighbors = vis.firstNeighbors([rootNode]);
        var neighborNodes = fNeighbors.neighbors;
        vis.select([rootNode]).select(neighborNodes); 
    });
    vis.addListener("mouseout", "nodes", function(evt) {
        //$('#node_details').html('');
        //$('#node_details').fadeOut();
    });
    vis.addListener("mouseover", "nodes", function(evt) {
        var data = evt.target.data;
        $('#node_details').html(gen_node_details(data)).fadeIn();
        //var q = qtip_data(evt);
        //q['content']['text'] = data.hover;
        //$('#' + div_id).qtip(q);
        //console.log(xx + ', ' + yy)
        //console.log($('#' + div_id).offsetLeft);
    });
    vis.addListener("click", "nodes", function(evt) {
        var data = evt.target.data;
        var graph_id = data.graph_id;
        if (graph_id) {
            window.location = graph_id;
            return;
        }
        /*
        var go_id = data.go_function_id;
        if (go_id) {
            window.open('[% request.uri_base %]/ppi/' + go_id);
            return;
        }
        */
        $('#dialog').html(gen_node_details(data));
        $('#dialog').dialog('option', 'title', data.label);
        $('#dialog').dialog('open');
    });
    vis.addListener("click", "edges", function(evt) {
        var target = evt.target;
        var graph_id = target.data.graph_id;
        if (graph_id) {
            window.location = graph_id;
            return;
        }
        var data = evt.target.data;
        $('#dialog').html(gen_node_details(data));
        $('#dialog').dialog('option', 'title', data.label);
        $('#dialog').dialog('open');
    });

    vis.nodeTooltipsEnabled(true);
});

$(function() {
    $('#dialog').dialog({ autoOpen: false, show: 'fade' });
    $.ajax({
        [% IF is_ppi %]
        url: "[% request.uri_base %]/ppi/[% graph_id %]",
        [% ELSE %]
        url: "[% request.uri_base %]/graphs/[% graph_id %].[% graph_format %]",
        [% END %]
        dataType: 'text',
        error: function(xhr, text, err) { 
            alert('ajax error: ' + text);
        },
        success: function(data) {
            var graph = data;
            [% IF graph_format == 'json' or is_ppi %]
            data = JSON.parse(data);
            graph = data['graph'];
            var metadata = data['metadata'];
            if (metadata && metadata['graph_details']) {
                $('#graph_details').html(metadata['graph_details']);
                $('#graph_details_cont').show();
            }
            var nodes_for_search = $.map(graph.data.nodes, function(n) {
                return n.id
            });
            $('#search_inp').autocomplete({
                source: nodes_for_search
            });
            //console.log(nodes_for_search);
            [% END %]
            //console.log(data);
            vis.draw({
                network: graph,
                visualStyle: {
                    nodes: {
                        tooltipText: "${tooltip}",
                        color: { passthroughMapper: { attrName: 'color' } },
                        size:  { passthroughMapper: { attrName: 'size'  } },
                        shape: { passthroughMapper: { attrName: 'shape' } }
                    },
                    edges: {
                        width: { passthroughMapper: { attrName: 'width' } }
                    }
                }
            });
        }
    });

});


</script>

<h1>
Graph <span id="graph_id"> [% graph_id %] </span>
</h1>

<div id="cytoscapeweb" style="width: 600px; height: 600px;">
    Loading graph ...
</div>

<div id="dialog" style="max-height:400px; overflow:auto;">
</div>
